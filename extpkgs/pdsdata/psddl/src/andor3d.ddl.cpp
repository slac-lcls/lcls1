
// *** Do not edit this file, it is auto-generated ***

#include "pdsdata/psddl/andor3d.ddl.h"

#include <iostream>
namespace Pds {
namespace Andor3d {
uint32_t
ConfigV1::frameSize() const {
  return 8 + this->numSensors()*4 + this->numPixels()*2;
}
std::ostream& operator<<(std::ostream& str, Andor3d::ConfigV1::EnumFanMode enval) {
  const char* val;
  switch (enval) {
  case Andor3d::ConfigV1::ENUM_FAN_FULL:
    val = "ENUM_FAN_FULL";
    break;
  case Andor3d::ConfigV1::ENUM_FAN_LOW:
    val = "ENUM_FAN_LOW";
    break;
  case Andor3d::ConfigV1::ENUM_FAN_OFF:
    val = "ENUM_FAN_OFF";
    break;
  case Andor3d::ConfigV1::ENUM_FAN_ACQOFF:
    val = "ENUM_FAN_ACQOFF";
    break;
  case Andor3d::ConfigV1::ENUM_FAN_NUM:
    val = "ENUM_FAN_NUM";
    break;
  default:
    return str << "EnumFanMode(" << int(enval) << ")";
  }
  return str << val;
}
} // namespace Andor3d
} // namespace Pds

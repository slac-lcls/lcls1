
// *** Do not edit this file, it is auto-generated ***

#include "pdsdata/psddl/oceanoptics.ddl.h"

#include <iostream>
namespace Pds {
namespace OceanOptics {
double
DataV1::nonlinerCorrected(const OceanOptics::ConfigV1& cfg, uint32_t iPixel) const {
  
    double fRawValue = (double) (this->data()[iPixel] ^ 0x2000);
    const ndarray<const double, 1>& corr = cfg.nonlinCorrect();
    return fRawValue / (
  corr[0] + fRawValue *
       (corr[1] + fRawValue *
       (corr[2] + fRawValue *
       (corr[3] + fRawValue *
       (corr[4] + fRawValue *
       (corr[5] + fRawValue *
       (corr[6] + fRawValue *
        corr[7])))))));

}
double
DataV1::nonlinerCorrected(const OceanOptics::ConfigV2& cfg, uint32_t iPixel) const {
  
    double fRawValue = (double) (this->data()[iPixel] ^ 0x2000);
    const ndarray<const double, 1>& corr = cfg.nonlinCorrect();
    return fRawValue / (
  corr[0] + fRawValue *
       (corr[1] + fRawValue *
       (corr[2] + fRawValue *
       (corr[3] + fRawValue *
       (corr[4] + fRawValue *
       (corr[5] + fRawValue *
       (corr[6] + fRawValue *
        corr[7])))))));

}
double
DataV2::nonlinerCorrected(const OceanOptics::ConfigV2& cfg, uint32_t iPixel) const {
  
    double fRawValue = (double) (this->data()[iPixel]);
    const ndarray<const double, 1>& corr = cfg.nonlinCorrect();
    return fRawValue / (
  corr[0] + fRawValue *
       (corr[1] + fRawValue *
       (corr[2] + fRawValue *
       (corr[3] + fRawValue *
       (corr[4] + fRawValue *
       (corr[5] + fRawValue *
       (corr[6] + fRawValue *
        corr[7])))))));

}
double
DataV3::nonlinerCorrected(const OceanOptics::ConfigV2& cfg, uint32_t iPixel) const {
  
    double fRawValue = (double) this->data()[iPixel];
    const ndarray<const double, 1>& corr = cfg.nonlinCorrect();
    return fRawValue / (
  corr[0] + fRawValue *
       (corr[1] + fRawValue *
       (corr[2] + fRawValue *
       (corr[3] + fRawValue *
       (corr[4] + fRawValue *
       (corr[5] + fRawValue *
       (corr[6] + fRawValue *
        corr[7])))))));

}
} // namespace OceanOptics
} // namespace Pds

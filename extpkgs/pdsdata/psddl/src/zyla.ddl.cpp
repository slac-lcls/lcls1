
// *** Do not edit this file, it is auto-generated ***

#include "pdsdata/psddl/zyla.ddl.h"

#include <iostream>
namespace Pds {
namespace Zyla {
uint32_t
ConfigV1::frameSize() const {
  return 12 + this->numPixels()*2;
}
std::ostream& operator<<(std::ostream& str, Zyla::ConfigV1::ATBool enval) {
  const char* val;
  switch (enval) {
  case Zyla::ConfigV1::False:
    val = "False";
    break;
  case Zyla::ConfigV1::True:
    val = "True";
    break;
  default:
    return str << "ATBool(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Zyla::ConfigV1::ShutteringMode enval) {
  const char* val;
  switch (enval) {
  case Zyla::ConfigV1::Rolling:
    val = "Rolling";
    break;
  case Zyla::ConfigV1::Global:
    val = "Global";
    break;
  default:
    return str << "ShutteringMode(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Zyla::ConfigV1::FanSpeed enval) {
  const char* val;
  switch (enval) {
  case Zyla::ConfigV1::Off:
    val = "Off";
    break;
  case Zyla::ConfigV1::Low:
    val = "Low";
    break;
  case Zyla::ConfigV1::On:
    val = "On";
    break;
  default:
    return str << "FanSpeed(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Zyla::ConfigV1::ReadoutRate enval) {
  const char* val;
  switch (enval) {
  case Zyla::ConfigV1::Rate280MHz:
    val = "Rate280MHz";
    break;
  case Zyla::ConfigV1::Rate200MHz:
    val = "Rate200MHz";
    break;
  case Zyla::ConfigV1::Rate100MHz:
    val = "Rate100MHz";
    break;
  case Zyla::ConfigV1::Rate10MHz:
    val = "Rate10MHz";
    break;
  default:
    return str << "ReadoutRate(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Zyla::ConfigV1::TriggerMode enval) {
  const char* val;
  switch (enval) {
  case Zyla::ConfigV1::Internal:
    val = "Internal";
    break;
  case Zyla::ConfigV1::ExternalLevelTransition:
    val = "ExternalLevelTransition";
    break;
  case Zyla::ConfigV1::ExternalStart:
    val = "ExternalStart";
    break;
  case Zyla::ConfigV1::ExternalExposure:
    val = "ExternalExposure";
    break;
  case Zyla::ConfigV1::Software:
    val = "Software";
    break;
  case Zyla::ConfigV1::Advanced:
    val = "Advanced";
    break;
  case Zyla::ConfigV1::External:
    val = "External";
    break;
  default:
    return str << "TriggerMode(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Zyla::ConfigV1::GainMode enval) {
  const char* val;
  switch (enval) {
  case Zyla::ConfigV1::HighWellCap12Bit:
    val = "HighWellCap12Bit";
    break;
  case Zyla::ConfigV1::LowNoise12Bit:
    val = "LowNoise12Bit";
    break;
  case Zyla::ConfigV1::LowNoiseHighWellCap16Bit:
    val = "LowNoiseHighWellCap16Bit";
    break;
  default:
    return str << "GainMode(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Zyla::ConfigV1::CoolingSetpoint enval) {
  const char* val;
  switch (enval) {
  case Zyla::ConfigV1::Temp_0C:
    val = "Temp_0C";
    break;
  case Zyla::ConfigV1::Temp_Neg5C:
    val = "Temp_Neg5C";
    break;
  case Zyla::ConfigV1::Temp_Neg10C:
    val = "Temp_Neg10C";
    break;
  case Zyla::ConfigV1::Temp_Neg15C:
    val = "Temp_Neg15C";
    break;
  case Zyla::ConfigV1::Temp_Neg20C:
    val = "Temp_Neg20C";
    break;
  case Zyla::ConfigV1::Temp_Neg25C:
    val = "Temp_Neg25C";
    break;
  case Zyla::ConfigV1::Temp_Neg30C:
    val = "Temp_Neg30C";
    break;
  case Zyla::ConfigV1::Temp_Neg35C:
    val = "Temp_Neg35C";
    break;
  case Zyla::ConfigV1::Temp_Neg40C:
    val = "Temp_Neg40C";
    break;
  default:
    return str << "CoolingSetpoint(" << int(enval) << ")";
  }
  return str << val;
}
} // namespace Zyla
} // namespace Pds


// *** Do not edit this file, it is auto-generated ***

#include "psddl_pds2psana/vimba.ddl.h"

#include <cstddef>

#include <stdexcept>

namespace psddl_pds2psana {
namespace Vimba {
Psana::Vimba::AlviumConfigV1::VmbBool pds_to_psana(Pds::Vimba::AlviumConfigV1::VmbBool e)
{
  return Psana::Vimba::AlviumConfigV1::VmbBool(e);
}

Psana::Vimba::AlviumConfigV1::RoiMode pds_to_psana(Pds::Vimba::AlviumConfigV1::RoiMode e)
{
  return Psana::Vimba::AlviumConfigV1::RoiMode(e);
}

Psana::Vimba::AlviumConfigV1::TriggerMode pds_to_psana(Pds::Vimba::AlviumConfigV1::TriggerMode e)
{
  return Psana::Vimba::AlviumConfigV1::TriggerMode(e);
}

Psana::Vimba::AlviumConfigV1::PixelMode pds_to_psana(Pds::Vimba::AlviumConfigV1::PixelMode e)
{
  return Psana::Vimba::AlviumConfigV1::PixelMode(e);
}

Psana::Vimba::AlviumConfigV1::ImgCorrectionType pds_to_psana(Pds::Vimba::AlviumConfigV1::ImgCorrectionType e)
{
  return Psana::Vimba::AlviumConfigV1::ImgCorrectionType(e);
}

Psana::Vimba::AlviumConfigV1::ImgCorrectionSet pds_to_psana(Pds::Vimba::AlviumConfigV1::ImgCorrectionSet e)
{
  return Psana::Vimba::AlviumConfigV1::ImgCorrectionSet(e);
}

AlviumConfigV1::AlviumConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr)
  : Psana::Vimba::AlviumConfigV1()
  , m_xtcObj(xtcPtr)
{
}
AlviumConfigV1::~AlviumConfigV1()
{
}


Psana::Vimba::AlviumConfigV1::VmbBool AlviumConfigV1::reverseX() const {
  return pds_to_psana(m_xtcObj->reverseX());
}


Psana::Vimba::AlviumConfigV1::VmbBool AlviumConfigV1::reverseY() const {
  return pds_to_psana(m_xtcObj->reverseY());
}


Psana::Vimba::AlviumConfigV1::VmbBool AlviumConfigV1::contrastEnable() const {
  return pds_to_psana(m_xtcObj->contrastEnable());
}


Psana::Vimba::AlviumConfigV1::VmbBool AlviumConfigV1::correctionEnable() const {
  return pds_to_psana(m_xtcObj->correctionEnable());
}


Psana::Vimba::AlviumConfigV1::RoiMode AlviumConfigV1::roiEnable() const {
  return pds_to_psana(m_xtcObj->roiEnable());
}


Psana::Vimba::AlviumConfigV1::ImgCorrectionType AlviumConfigV1::correctionType() const {
  return pds_to_psana(m_xtcObj->correctionType());
}


Psana::Vimba::AlviumConfigV1::ImgCorrectionSet AlviumConfigV1::correctionSet() const {
  return pds_to_psana(m_xtcObj->correctionSet());
}


Psana::Vimba::AlviumConfigV1::PixelMode AlviumConfigV1::pixelMode() const {
  return pds_to_psana(m_xtcObj->pixelMode());
}


Psana::Vimba::AlviumConfigV1::TriggerMode AlviumConfigV1::triggerMode() const {
  return pds_to_psana(m_xtcObj->triggerMode());
}


uint32_t AlviumConfigV1::width() const {
  return m_xtcObj->width();
}


uint32_t AlviumConfigV1::height() const {
  return m_xtcObj->height();
}


uint32_t AlviumConfigV1::offsetX() const {
  return m_xtcObj->offsetX();
}


uint32_t AlviumConfigV1::offsetY() const {
  return m_xtcObj->offsetY();
}


uint32_t AlviumConfigV1::sensorWidth() const {
  return m_xtcObj->sensorWidth();
}


uint32_t AlviumConfigV1::sensorHeight() const {
  return m_xtcObj->sensorHeight();
}


uint32_t AlviumConfigV1::contrastDarkLimit() const {
  return m_xtcObj->contrastDarkLimit();
}


uint32_t AlviumConfigV1::contrastBrightLimit() const {
  return m_xtcObj->contrastBrightLimit();
}


uint32_t AlviumConfigV1::contrastShape() const {
  return m_xtcObj->contrastShape();
}


double AlviumConfigV1::exposureTime() const {
  return m_xtcObj->exposureTime();
}


double AlviumConfigV1::blackLevel() const {
  return m_xtcObj->blackLevel();
}


double AlviumConfigV1::gain() const {
  return m_xtcObj->gain();
}


double AlviumConfigV1::gamma() const {
  return m_xtcObj->gamma();
}


const char* AlviumConfigV1::manufacturer() const {
  return m_xtcObj->manufacturer();
}


const char* AlviumConfigV1::family() const {
  return m_xtcObj->family();
}


const char* AlviumConfigV1::model() const {
  return m_xtcObj->model();
}


const char* AlviumConfigV1::manufacturerId() const {
  return m_xtcObj->manufacturerId();
}


const char* AlviumConfigV1::version() const {
  return m_xtcObj->version();
}


const char* AlviumConfigV1::serialNumber() const {
  return m_xtcObj->serialNumber();
}


const char* AlviumConfigV1::firmwareId() const {
  return m_xtcObj->firmwareId();
}


const char* AlviumConfigV1::firmwareVersion() const {
  return m_xtcObj->firmwareVersion();
}


uint32_t AlviumConfigV1::depth() const {
  return m_xtcObj->depth();
}


uint32_t AlviumConfigV1::frameSize() const {
  return m_xtcObj->frameSize();
}


uint32_t AlviumConfigV1::numPixelsX() const {
  return m_xtcObj->numPixelsX();
}


uint32_t AlviumConfigV1::numPixelsY() const {
  return m_xtcObj->numPixelsY();
}


uint32_t AlviumConfigV1::numPixels() const {
  return m_xtcObj->numPixels();
}

template <typename Config>
FrameV1<Config>::FrameV1(const boost::shared_ptr<const XtcType>& xtcPtr, const boost::shared_ptr<const Config>& cfgPtr)
  : Psana::Vimba::FrameV1()
  , m_xtcObj(xtcPtr)
  , m_cfgPtr(cfgPtr)
{
}
template <typename Config>
FrameV1<Config>::~FrameV1()
{
}


template <typename Config>
uint64_t FrameV1<Config>::frameid() const {
  return m_xtcObj->frameid();
}


template <typename Config>
uint64_t FrameV1<Config>::timestamp() const {
  return m_xtcObj->timestamp();
}


template <typename Config>
ndarray<const uint16_t, 2> FrameV1<Config>::data() const {
  return m_xtcObj->data(*m_cfgPtr, m_xtcObj);
}

template class FrameV1<Pds::Vimba::AlviumConfigV1>;
} // namespace Vimba
} // namespace psddl_pds2psana

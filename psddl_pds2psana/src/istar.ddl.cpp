
// *** Do not edit this file, it is auto-generated ***

#include "psddl_pds2psana/istar.ddl.h"

#include <cstddef>

#include <stdexcept>

namespace psddl_pds2psana {
namespace iStar {
Psana::iStar::ConfigV1::ATBool pds_to_psana(Pds::iStar::ConfigV1::ATBool e)
{
  return Psana::iStar::ConfigV1::ATBool(e);
}

Psana::iStar::ConfigV1::FanSpeed pds_to_psana(Pds::iStar::ConfigV1::FanSpeed e)
{
  return Psana::iStar::ConfigV1::FanSpeed(e);
}

Psana::iStar::ConfigV1::ReadoutRate pds_to_psana(Pds::iStar::ConfigV1::ReadoutRate e)
{
  return Psana::iStar::ConfigV1::ReadoutRate(e);
}

Psana::iStar::ConfigV1::TriggerMode pds_to_psana(Pds::iStar::ConfigV1::TriggerMode e)
{
  return Psana::iStar::ConfigV1::TriggerMode(e);
}

Psana::iStar::ConfigV1::GainMode pds_to_psana(Pds::iStar::ConfigV1::GainMode e)
{
  return Psana::iStar::ConfigV1::GainMode(e);
}

Psana::iStar::ConfigV1::GateMode pds_to_psana(Pds::iStar::ConfigV1::GateMode e)
{
  return Psana::iStar::ConfigV1::GateMode(e);
}

Psana::iStar::ConfigV1::InsertionDelay pds_to_psana(Pds::iStar::ConfigV1::InsertionDelay e)
{
  return Psana::iStar::ConfigV1::InsertionDelay(e);
}

ConfigV1::ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr)
  : Psana::iStar::ConfigV1()
  , m_xtcObj(xtcPtr)
{
}
ConfigV1::~ConfigV1()
{
}


Psana::iStar::ConfigV1::ATBool ConfigV1::cooling() const {
  return pds_to_psana(m_xtcObj->cooling());
}


Psana::iStar::ConfigV1::ATBool ConfigV1::overlap() const {
  return pds_to_psana(m_xtcObj->overlap());
}


Psana::iStar::ConfigV1::ATBool ConfigV1::noiseFilter() const {
  return pds_to_psana(m_xtcObj->noiseFilter());
}


Psana::iStar::ConfigV1::ATBool ConfigV1::blemishCorrection() const {
  return pds_to_psana(m_xtcObj->blemishCorrection());
}


Psana::iStar::ConfigV1::ATBool ConfigV1::mcpIntelligate() const {
  return pds_to_psana(m_xtcObj->mcpIntelligate());
}


Psana::iStar::ConfigV1::FanSpeed ConfigV1::fanSpeed() const {
  return pds_to_psana(m_xtcObj->fanSpeed());
}


Psana::iStar::ConfigV1::ReadoutRate ConfigV1::readoutRate() const {
  return pds_to_psana(m_xtcObj->readoutRate());
}


Psana::iStar::ConfigV1::TriggerMode ConfigV1::triggerMode() const {
  return pds_to_psana(m_xtcObj->triggerMode());
}


Psana::iStar::ConfigV1::GainMode ConfigV1::gainMode() const {
  return pds_to_psana(m_xtcObj->gainMode());
}


Psana::iStar::ConfigV1::GateMode ConfigV1::gateMode() const {
  return pds_to_psana(m_xtcObj->gateMode());
}


Psana::iStar::ConfigV1::InsertionDelay ConfigV1::insertionDelay() const {
  return pds_to_psana(m_xtcObj->insertionDelay());
}


uint16_t ConfigV1::mcpGain() const {
  return m_xtcObj->mcpGain();
}


uint32_t ConfigV1::width() const {
  return m_xtcObj->width();
}


uint32_t ConfigV1::height() const {
  return m_xtcObj->height();
}


uint32_t ConfigV1::orgX() const {
  return m_xtcObj->orgX();
}


uint32_t ConfigV1::orgY() const {
  return m_xtcObj->orgY();
}


uint32_t ConfigV1::binX() const {
  return m_xtcObj->binX();
}


uint32_t ConfigV1::binY() const {
  return m_xtcObj->binY();
}


double ConfigV1::exposureTime() const {
  return m_xtcObj->exposureTime();
}


double ConfigV1::triggerDelay() const {
  return m_xtcObj->triggerDelay();
}


uint32_t ConfigV1::frameSize() const {
  return m_xtcObj->frameSize();
}


uint32_t ConfigV1::numPixelsX() const {
  return m_xtcObj->numPixelsX();
}


uint32_t ConfigV1::numPixelsY() const {
  return m_xtcObj->numPixelsY();
}


uint32_t ConfigV1::numPixels() const {
  return m_xtcObj->numPixels();
}

} // namespace iStar
} // namespace psddl_pds2psana

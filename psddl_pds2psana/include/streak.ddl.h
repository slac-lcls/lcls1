#ifndef PSDDL_PDS2PSANA_STREAK_DDL_H
#define PSDDL_PDS2PSANA_STREAK_DDL_H 1

// *** Do not edit this file, it is auto-generated ***

#include <vector>
#include <boost/shared_ptr.hpp>
#include "psddl_psana/streak.ddl.h"
#include "pdsdata/psddl/streak.ddl.h"
namespace psddl_pds2psana {
namespace Streak {

class ConfigV1 : public Psana::Streak::ConfigV1 {
public:
  typedef Pds::Streak::ConfigV1 XtcType;
  typedef Psana::Streak::ConfigV1 PsanaType;
  ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV1();
  virtual uint64_t timeRange() const;
  virtual Psana::Streak::ConfigV1::DeviceMode mode() const;
  virtual Psana::Streak::ConfigV1::GateMode gate() const;
  virtual uint32_t gain() const;
  virtual Psana::Streak::ConfigV1::ShutterMode shutter() const;
  virtual Psana::Streak::ConfigV1::TriggerMode triggerMode() const;
  virtual uint32_t focusTimeOver() const;
  virtual double exposureTime() const;
  virtual Psana::Streak::ConfigV1::CalibScale calibScale() const;
  virtual ndarray<const double, 1> calib() const;
  virtual double calibScaleFactor() const;
  virtual ndarray<const double, 1> calibTimes() const;
  virtual ndarray<const double, 1> calibTimesInSeconds() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};

} // namespace Streak
} // namespace psddl_pds2psana
#endif // PSDDL_PDS2PSANA_STREAK_DDL_H

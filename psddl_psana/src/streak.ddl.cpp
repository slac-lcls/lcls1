
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/streak.ddl.h"
#include <iostream>
namespace Psana {
namespace Streak {

ConfigV1::~ConfigV1() {}

std::ostream& operator<<(std::ostream& str, Streak::ConfigV1::DeviceMode enval) {
  const char* val;
  switch (enval) {
  case Streak::ConfigV1::Focus:
    val = "Focus";
    break;
  case Streak::ConfigV1::Operate:
    val = "Operate";
    break;
  default:
    return str << "DeviceMode(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Streak::ConfigV1::ShutterMode enval) {
  const char* val;
  switch (enval) {
  case Streak::ConfigV1::Closed:
    val = "Closed";
    break;
  case Streak::ConfigV1::Open:
    val = "Open";
    break;
  default:
    return str << "ShutterMode(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Streak::ConfigV1::GateMode enval) {
  const char* val;
  switch (enval) {
  case Streak::ConfigV1::Normal:
    val = "Normal";
    break;
  case Streak::ConfigV1::Gate:
    val = "Gate";
    break;
  case Streak::ConfigV1::OpenFixed:
    val = "OpenFixed";
    break;
  default:
    return str << "GateMode(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Streak::ConfigV1::TriggerMode enval) {
  const char* val;
  switch (enval) {
  case Streak::ConfigV1::Single:
    val = "Single";
    break;
  case Streak::ConfigV1::Continuous:
    val = "Continuous";
    break;
  default:
    return str << "TriggerMode(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Streak::ConfigV1::CalibScale enval) {
  const char* val;
  switch (enval) {
  case Streak::ConfigV1::Nanoseconds:
    val = "Nanoseconds";
    break;
  case Streak::ConfigV1::Microseconds:
    val = "Microseconds";
    break;
  case Streak::ConfigV1::Milliseconds:
    val = "Milliseconds";
    break;
  case Streak::ConfigV1::Seconds:
    val = "Seconds";
    break;
  default:
    return str << "CalibScale(" << int(enval) << ")";
  }
  return str << val;
}
} // namespace Streak
} // namespace Psana

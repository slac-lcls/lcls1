
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/uxi.ddl.h"
#include <iostream>
namespace Psana {
namespace Uxi {

ConfigV1::~ConfigV1() {}


ConfigV2::~ConfigV2() {}

std::ostream& operator<<(std::ostream& str, Uxi::ConfigV2::RoiMode enval) {
  const char* val;
  switch (enval) {
  case Uxi::ConfigV2::Off:
    val = "Off";
    break;
  case Uxi::ConfigV2::On:
    val = "On";
    break;
  default:
    return str << "RoiMode(" << int(enval) << ")";
  }
  return str << val;
}

ConfigV3::~ConfigV3() {}

std::ostream& operator<<(std::ostream& str, Uxi::ConfigV3::RoiMode enval) {
  const char* val;
  switch (enval) {
  case Uxi::ConfigV3::Off:
    val = "Off";
    break;
  case Uxi::ConfigV3::On:
    val = "On";
    break;
  default:
    return str << "RoiMode(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Uxi::ConfigV3::OscMode enval) {
  const char* val;
  switch (enval) {
  case Uxi::ConfigV3::RelaxationOsc:
    val = "RelaxationOsc";
    break;
  case Uxi::ConfigV3::RingOscWithCaps:
    val = "RingOscWithCaps";
    break;
  case Uxi::ConfigV3::RingOscNoCaps:
    val = "RingOscNoCaps";
    break;
  case Uxi::ConfigV3::ExternalClock:
    val = "ExternalClock";
    break;
  default:
    return str << "OscMode(" << int(enval) << ")";
  }
  return str << val;
}

FrameV1::~FrameV1() {}

} // namespace Uxi
} // namespace Psana

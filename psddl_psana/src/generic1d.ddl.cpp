
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/generic1d.ddl.h"
#include <iostream>
namespace Psana {
namespace Generic1D {

ConfigV0::~ConfigV0() {}

std::ostream& operator<<(std::ostream& str, Generic1D::ConfigV0::Sample_Type enval) {
  const char* val;
  switch (enval) {
  case Generic1D::ConfigV0::UINT8:
    val = "UINT8";
    break;
  case Generic1D::ConfigV0::UINT16:
    val = "UINT16";
    break;
  case Generic1D::ConfigV0::UINT32:
    val = "UINT32";
    break;
  case Generic1D::ConfigV0::FLOAT32:
    val = "FLOAT32";
    break;
  case Generic1D::ConfigV0::FLOAT64:
    val = "FLOAT64";
    break;
  default:
    return str << "Sample_Type(" << int(enval) << ")";
  }
  return str << val;
}

DataV0::~DataV0() {}

} // namespace Generic1D
} // namespace Psana
